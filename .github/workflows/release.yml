name: Release

on:
  push:
    branches: ['8.1/main']
  workflow_dispatch:

concurrency: 8.1-${{ github.workflow }}-${{ github.ref }}

env:
  JAVA_VERSION: 21
  NODE_VERSION: 20

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  changesets:
    name: Process Changesets
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          commit: '[ci] release v8.1 branch'
          title: '(CI) Release v8.1 Branch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-tag:
    name: Determine Release Tag
    runs-on: ubuntu-latest
    outputs:
      RELEASE_NAME: ${{ env.RELEASE_NAME }}
      RELEASE_TAG: ${{ env.RELEASE_TAG }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Create Release Tag
        id: get_release_tag
        run: |
          VERSION="8.1"
          DATE=$(date +%Y.%-m.%-d)
          echo "RELEASE_NAME=(Ignition ${VERSION}) ${DATE}" >> $GITHUB_ENV
          echo "RELEASE_TAG=releases/${VERSION}/${DATE}" >> $GITHUB_ENV

  release:
    name: Release
    needs: [release-tag, changesets]
    if: >
      needs.changesets.outputs.hasChangesets == 'false' ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Configure Build Environment
        uses: ./.github/actions/configure-build-env
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          node-version: '${{ env.NODE_VERSION }}'
          gradle-signing-props: '${{ secrets.GRADLE_IGNITION_MODULE_SIGNING_PROPS }}'
          module-signing-certificate: '${{ secrets.IGNITION_MODULE_CERT_BASE64 }}'
          module-signing-keystore: '${{ secrets.IGNITION_MODULE_KEYSTORE_BASE64 }}'

      - name: Build
        run: ./gradlew --scan build

      - name: Extract Release Notes from Changesets PR
        id: extract_release_notes
        run: |
          PR_NUMBER=$(gh pr list --search "(CI) Release v8.1 Branch" --state merged --json number -q '.[0].number')
          if [ -z "$PR_NUMBER" ]; then
            echo "No matching merged PR found."
            exit 1
          fi
          
          BODY=$(gh pr view "$PR_NUMBER" --json body -q .body)
          # Extract everything after "# Releases"
          RELEASE_NOTES=$(echo "$BODY" | awk '/^# Releases/{flag=1; next} flag')
          echo "$RELEASE_NOTES" > ./RELEASE_NOTES.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          tag: ${{ needs.release-tag.outputs.RELEASE_TAG }}
          name: ${{ needs.release-tag.outputs.RELEASE_NAME }}
          body: 'TODO: Merge all changelogs into the body of the release.'
          bodyFile: './RELEASE_NOTES.md'
          makeLatest: true
          skipIfReleaseExists: true
          artifacts: './build/modules/*.modl'

  dependency-submission:
    runs-on: ubuntu-latest
    name: Submit dependencies
    steps:
      - uses: actions/checkout@v4

      - name: 'Set up Java ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v4
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'zulu'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
